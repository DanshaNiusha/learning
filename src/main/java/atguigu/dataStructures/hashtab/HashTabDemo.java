package atguigu.dataStructures.hashtab;

import java.util.Scanner;

public class HashTabDemo {

	public static void main(String[] args) {
		
		//?????????
		HashTab hashTab = new HashTab(7);
		
		//§Õ????????
		String key = "";
		Scanner scanner = new Scanner(System.in);
		while(true) {
			System.out.println("add:  ?????");
			System.out.println("list: ??????");
			System.out.println("find: ??????");
			System.out.println("exit: ?????");
			
			key = scanner.next();
			switch (key) {
			case "add":
				System.out.println("????id");
				int id = scanner.nextInt();
				System.out.println("????????");
				String name = scanner.next();
				//???? ???
				Emp emp = new Emp(id, name);
				hashTab.add(emp);
				break;
			case "list":
				hashTab.list();
				break;
			case "find":
				System.out.println("????????????id");
				id = scanner.nextInt();
				hashTab.findEmpById(id);
				break;
			case "exit":
				scanner.close();
				System.exit(0);
			default:
				break;
			}
		}
		
	}

}

//????HashTab ???????????
class HashTab {
	private EmpLinkedList[] empLinkedListArray;
	private int size; //????§Ø?????????
	
	//??????
	public HashTab(int size) {
		this.size = size;
		//?????empLinkedListArray
		empLinkedListArray = new EmpLinkedList[size];
		//?????????, ????????????????????
		for(int i = 0; i < size; i++) {
			empLinkedListArray[i] = new EmpLinkedList();
		}
	}
	
	//?????
	public void add(Emp emp) {
		//?????????id ,???????????????????????
		int empLinkedListNO = hashFun(emp.id);
		//??emp ???????????????
		empLinkedListArray[empLinkedListNO].add(emp);
		
	}
	//???????§Ö?????,????hashtab
	public void list() {
		for(int i = 0; i < size; i++) {
			empLinkedListArray[i].list(i);
		}
	}
	
	//?????????id,??????
	public void findEmpById(int id) {
		//?????§Ü???????????????????
		int empLinkedListNO = hashFun(id);
		Emp emp = empLinkedListArray[empLinkedListNO].findEmpById(id);
		if(emp != null) {//???
			System.out.printf("???%d??????????? ??? id = %d\n", (empLinkedListNO + 1), id);
		}else{
			System.out.println("???????§µ????????¨´??~");
		}
	}
	
	//??§Õ??§Ü???, ????????????
	public int hashFun(int id) {
		return id % size;
	}
	
	
}

//?????????
class Emp {
	public int id;
	public String name;
	public Emp next; //next ???? null
	public Emp(int id, String name) {
		super();
		this.id = id;
		this.name = name;
	}
}

//????EmpLinkedList ,???????
class EmpLinkedList {
	//??????§Ö????Emp,???????????????head ????????????Emp
	private Emp head; //???null
	
	//???????????
	//???
	//1. ???????????????id ????????????id??????????§³????
	//   ?????????¨´???????????????????
	public void add(Emp emp) {
		//???????????????
		if(head == null) {
			head = emp;
			return;
		}
		//???????????????????????????????????????¦Ë?????
		Emp curEmp = head;
		while(true) {
			if(curEmp.next == null) {//????????????
				break;
			}
			curEmp = curEmp.next; //????
		}
		//????????emp ????????
		curEmp.next = emp;
	}
	
	//??????????????
	public void list(int no) {
		if(head == null) { //??????????
			System.out.println("?? "+(no+1)+" ???????");
			return;
		}
		System.out.print("?? "+(no+1)+" ?????????");
		Emp curEmp = head; //???????
		while(true) {
			System.out.printf(" => id=%d name=%s\t", curEmp.id, curEmp.name);
			if(curEmp.next == null) {//???curEmp??????????
				break;
			}
			curEmp = curEmp.next; //?????????
		}
		System.out.println();
	}
	
	//????id??????
	//???????????????Emp, ????????????????null
	public Emp findEmpById(int id) {
		//?§Ø???????????
		if(head == null) {
			System.out.println("???????");
			return null;
		}
		//???????
		Emp curEmp = head;
		while(true) {
			if(curEmp.id == id) {//???
				break;//???curEmp?????????????
			}
			//???
			if(curEmp.next == null) {//?????????????????????¨´??
				curEmp = null;
				break;
			}
			curEmp = curEmp.next;//???
		}
		
		return curEmp;
	}
	
}

